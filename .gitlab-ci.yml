# Merge-Request Pipeline
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_PROJECT_URL != "https://gitlab.com/nitk-nest/nest"
      when: never
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH


default:
  tags:
    - nest
  image: docker:20.10.3

stages:
  - build_docker
  - build
  - test
  - release
  - push_docker

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:master

# https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#making-docker-in-docker-builds-faster-with-docker-layer-caching
build docker:
  tags:
    - dind-runner
  services:
    - docker:dind
  stage: build_docker
  script:
    - docker login -u $CI_DEPLOY_USERNAME -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $CONTAINER_RELEASE_IMAGE || true
    - docker build --cache-from $CONTAINER_RELEASE_IMAGE -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

build nest:
  image: $CONTAINER_TEST_IMAGE
  stage: build
  script:
    - pip install .

run style check:
  image: $CONTAINER_TEST_IMAGE
  stage: test
  script:
    - pre-commit --version
    - pre-commit run --all-files

    - gitlint --version
    - git fetch
    - gitlint --commits origin/master..HEAD

run unit tests:
  image: $CONTAINER_TEST_IMAGE
  stage: test
  script:
    - pip install .
    - coverage --version
    - coverage run --source nest -m unittest -v
    - coverage report
    - coverage xml
  artifacts:
    reports:
      cobertura: coverage.xml
    paths:
      - test-experiment*/

test docs:
  image: $CONTAINER_TEST_IMAGE
  stage: test
  script:
    - pip install -r docs/doc_requirements.txt
    - make -C docs html
  rules:
    - changes:
        - docs/*

upload to PyPI:
  image: $CONTAINER_TEST_IMAGE
  stage: release
  script:
    - pip install -U twine setuptools wheel
    - python setup.py sdist bdist_wheel
    - twine upload dist/* --verbose
  only:
    - tags

push_docker:
  tags:
    - dind-runner
  services:
    - docker:dind
  stage: push_docker
  script:
   - docker login -u $CI_DEPLOY_USERNAME -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
   - docker pull $CONTAINER_TEST_IMAGE
   - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
   - docker push $CONTAINER_RELEASE_IMAGE
  only:
    refs:
      - master@nitk-nest/nest
    changes:
      - "Dockerfile"
